

class HeapSort {
    
    void heapify(int arr[], int n, int i){
        int largest = i; // root node index
        int l = 2*i+1; //Left child
        int r = 2*i+2; // right child
            
        if(l < n && arr[l] > arr[largest])
            largest = l;
            
        if(r < n && arr[r] > arr[largest])
            largest = r;
            
        if(largest != i){
            int temp = arr[i];
            arr[i] = arr[largest];
            arr[largest] = temp;
            
            heapify(arr, n, largest);
        }
        
    }
    //building max heap
    void heapsort(int arr[]){
        int n = arr.length;
        for(int i = n/2-1; i>=0; i--){
            heapify(arr, n, i); // Max heap
        }
        for(int i = n; i > 0; i--){
            int temp = arr[i];
            arr[0] = arr[i];
            arr[i] = temp;
            
            heapify(arr, i, 0);
        }
        
    }
    void display(int arr[]){
        for(int i = 0; i< arr.length; i++){
            System.out.println(arr[i] + " ");
        }
        System.out.print(" ");
    }
    
    public static void main(String[] args) {
        HeapSort h1 = new HeapSort();
        int arr[] = {99, 66, 77, 44, 33, 88, 11};
        h1.display(arr);
        h1.heapsort(arr);
        h1.display(arr);
        
    }
}